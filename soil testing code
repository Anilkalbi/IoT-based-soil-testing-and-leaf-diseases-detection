 üêç Code for soil testing :

import time
import RPi.GPIO as GPIO
import spidev
import Adafruit_DHT
import RPi.GPIO as GPIO
import time
import telepot
bot=telepot.Bot("6477942983:AAEbhcX4Njn43HgMPupPepP0ooxMrhPdZ2g")
GPIO.setwarnings(False)
GPIO.setmode(GPIO.BCM)
sensor = Adafruit_DHT.DHT11
pin = 19
GPIO.setwarnings(False)
GPIO.setmode(GPIO.BCM)
spi = spidev.SpiDev()
spi.open(0,0)
spi.max_speed_hz=5000
def ReadChannel(channel):
adc = spi.xfer2([1,(8+channel)<<4,0])
data = ((adc[1]&3) << 8) + adc[2]
return data
def SENSOR_TEMP():
moister = ReadChannel(1)
print("moister level : {} ".format(moister))
bot.sendMessage('703182124',str('The moister value is : {} '.format(moister)))
npk = ReadChannel(0)
print("npk level : {} ".format(npk))
n_value=5*npk*35/1023
p_value=5*npk*120/1023
k_value=5*npk*100/1023
print("THE NITROGEN VALUE : {}".format(n_value))
bot.sendMessage('703182124',str('The nitrogen value is : {} '.format(n_value)))
print("THE PHOSPHROUS VALUE : {}".format(p_value))
bot.sendMessage('703182124',str('The phosphorous value is : {} '.format(p_value)))
print("THE POTASSIUM VALUE : {}".format(k_value))
bot.sendMessage('703182124',str('The potassium value is : {} '.format(k_value)))
humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)
print('Humidity: {} and Temperature: {}'.format(humidity, temperature))
bot.sendMessage('703182124',str('The temperature is : {} degree C'.format(temperature)))
IoT Based Soil Testing and Real Time System for Leaf Disease Detection Using Raspberry Pi
while 1:
SENSOR_TEMP()
time.sleep(2)
