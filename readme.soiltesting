üå± Project Title:
IoT Based Soil Testing and Real-Time Monitoring System Using Raspberry Pi

üß† Overview :

This system uses a Raspberry Pi, soil sensors, and Telegram bot to monitor soil conditions (moisture and NPK levels), temperature, and humidity in real-time. 

The data is automatically sent to a specified user on Telegram.

üõ†Ô∏è Hardware Components Used :

 - Raspberry Pi (GPIO & SPI communication)
 - Soil Moisture Sensor
 - NPK Sensor (measuring Nitrogen, Phosphorus, and Potassium levels via ADC)
 - DHT11 Sensor (for Temperature and Humidity)
 - MCP3008 ADC (to convert analog sensor data to digital)
 - Internet Connectivity (for Telegram alerts)

üìú Library Explanation :

import RPi.GPIO as GPIO       #Controls Raspberry Pi GPIO pins
import spidev                 # SPI protocol for MCP3008 ADC
import Adafruit_DHT           # Reads data from DHT11 temperature and humidity sensor
import telepot                # Sends messages using Telegram bot API

‚öôÔ∏è Setup :

1. Telegram Bot Initialization :

   - bot = telepot.Bot("BOT_API_KEY")

The bot sends real-time data to the Telegram user with ID 703182124.

2. Sensor & SPI Initialization :

   - spi = spidev.SpiDev()
   - spi.open(0, 0)
   - spi.max_speed_hz = 5000

Opens SPI communication to the MCP3008 ADC, allowing analog sensors to be read.

3. Read ADC Channels :
    - def ReadChannel(channel):
    - adc = spi.xfer2([1, (8+channel)<<4, 0])
    - data = ((adc[1]&3) << 8) + adc[2]
    - return data

Reads analog values from the selected ADC channel (0 or 1), converts them to digital.

4. Sensor Data Collection :
    - def SENSOR_TEMP():
    - moister = ReadChannel(1)
    - npk = ReadChannel(0)

    Reads:
    Soil Moisture from channel 1
    NPK Sensor from channel 0
    NPK values are calculated using approximate scaling formulas:
    n_value = 5 * npk * 35 / 1023
    p_value = 5 * npk * 120 / 1023
    k_value = 5 * npk * 100 / 1023
    (These formulas are sample approximations; real sensors require calibration.)

5. Send Data to Telegram :

    - bot.sendMessage('703182124', str('The nitrogen value is: {}'.format(n_value)))

    Sends each sensor value as a message to the user.

6. Read Temperature & Humidity :
    - humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)

   Reads temperature and humidity from DHT11.
   Retries automatically if the read fails.

üîÅ Loop Execution:

   while 1:
     SENSOR_TEMP()
     time.sleep(2)

Continuously calls SENSOR_TEMP() every 2 seconds.

‚úÖ Output:

    - Displays and sends:
    - Soil moisture level
    - Nitrogen, Phosphorous, Potassium values
    - Temperature and humidity

üì° Applications:

    - Smart agriculture
    - Precision farming
    - Greenhouse automation
    - Real-time farm monitoring and alerting
